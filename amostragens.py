# -*- coding: utf-8 -*-
"""Amostragens

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uT4DL7C8fHHbBNOcTQoDtfngl1UQh2I8

Amostragem simples
"""

import pandas as pd
import numpy as np
from math import ceil

data = pd.read_csv('iris.csv')
data.head()

data.shape

#criando uma amostragem com base no conjunto de dados
np.random.seed(2345)
amostra = np.random.choice(a=[0,1], size=150, replace=True, p=[0.7,0.3])

#len(amostra)

#len(amostra[amostra == 1])
len(amostra[amostra == 0])

data_final2 = data.loc[amostra == 0]
data_final2.shape

"""Amostragem Sistem√°tica"""

populacao = 150
amostragem = 15
k = ceil(populacao/amostragem)
print(k)

r = np.random.randint(low = 1, high = k + 1, size = 1)
print(r)

acumulador = r[0]
sorteados = []
for i in range(amostragem):
  sorteados.append(acumulador)
  acumulador += k
print(sorteados)

data_final3 = data.iloc[sorteados]
data_final3

"""Amostragem estratificada"""

from sklearn.model_selection import train_test_split

data['class'].value_counts()

x,_,y,_ = train_test_split(data.iloc[:, 0:4], data.iloc[:,4],test_size = 0.5, stratify = data.iloc[:,4])

y.value_counts()

"""Medidas de centralidade"""

from scipy import stats

jogadores = [40000,18000,12000,250000,30000,140000,300000,40000,800000]
np.mean(jogadores)

quartis = np.quantile(jogadores, [0.25,0.5,0.75])
quartis

np.std(jogadores, ddof=1)

stats.describe(jogadores)

from scipy.stats import norm,skewnorm
import matplotlib.pyplot as plt

norm.cdf(6,8,2)

norm.sf(6,8,2)
1 - norm.cdf(6,8,2)

norm.cdf(6,8,2) + norm.sf(10,8,2)



dados = norm.rvs(size=1000)
dados

plt.hist(dados, bins = 10)

stats.shapiro(dados)

fig, ax = plt.subplots()
stats.probplot(dados, fit=True , plot=ax)
plt.show()

